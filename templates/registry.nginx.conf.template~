upstream docker-registry {
  server localhost:5000;
}

server {
  listen 80;
  server_name %deployment_server_name%.%deployment_domain%;

  root /nowhere;
  rewrite ^ https://%deployment_server_name%.%deployment_domain%$request_uri? permanent;
}

server {
  listen       443 ssl;
  server_name %deployment_server_name%.%deployment_domain%;

  ssl on;
  ssl_certificate /opt/certs/%deployment_server_name%.%deployment_domain%.crt;
  ssl_certificate_key /opt/certs/%deployment_server_name%.%deployment_domain%.key;
  ssl_session_cache         shared:SSL:10m;
  ssl_session_timeout       5m;
  ssl_protocols             SSLv3 TLSv1 TLSv1.1 TLSv1.2 SSLv2;
  ssl_ciphers               "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
  ssl_prefer_server_ciphers on;

  proxy_set_header Host       $http_host;   # required for Docker client sake
  proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP
  #proxy_set_header  Authorization  ""; # see https://github.com/dotcloud/docker-registry/issues/170
  #proxy_read_timeout               900;

  client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)
  chunked_transfer_encoding on;

  location / {
      # let Nginx know about our auth file
      #auth_basic              "Restricted";
      #auth_basic_user_file    docker-registry.htpasswd;
      auth_basic off;
      proxy_pass http://docker-registry;
  }

  location /_ping {
      auth_basic off;
      proxy_pass http://docker-registry;
  }

  location /v1/_ping {
      auth_basic off;
      proxy_pass http://docker-registry;
  }

}